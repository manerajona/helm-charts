{{- $releaseName := .Release.Name }}
{{- $releaseVersion := .Release.Revision }}
{{- $chartVersion := .Chart.Version }}
{{- $foo := .Files.Get "files/foo.txt" }}
{{- $bar := (.Files.Glob "files/bar.yml").AsConfig }}
{{- $isEnabled := .Values.somethingEnabled }}
{{- $v1 := .Values.val1 }}
{{- $v2 := .Values.val2 }}
{{- $v3 := .Values.val3 }}
{{- $v4 := .Values.val4 }}
{{- $v5 := .Values.val5 }}
{{- $author := .Values.author.fullName }}
{{- range $cm, $content := .Values.configMaps}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $cm }}
  namespace: default
  annotations:
    releaseName: {{ $releaseName | quote }}
    releaseVersion: {{ $releaseVersion | quote }}
    chartVersion: {{ $chartVersion | quote }}
    authorId: {{ randNumeric 6 | squote }}
    authorUsername: {{ $author | camelcase }}
    authorInitials: {{ $author | initials }}
    authorFirstname: {{ $author | substr 0 8 }}
    authorLastname: {{ $author | substr 9 -1 }}
    authorFavouriteDisc: {{ repeat 3 "la " | title | quote}}
    isAuthorJonathan: {{ $author | contains "Jonathan" | squote }}
data:
{{- range $v := $content }}
  {{ $v.key }} : {{ $v.data }}
{{- end }}
  foo: {{ $foo | quote}}
{{ $bar | indent 2 }}
{{- if $isEnabled }}
  something: "enabled"
{{- else }}
  something: "disabled"
{{- end }}
{{- if and $v1 $v2 }}
  valuesCheck: "match"
{{- else }}
  valuesCheck: "no match"
{{- end }}
{{- if eq $v3 "3" }}
  valuesCheck: "match"
{{- else }}
  {{- fail "val3 is not valid" }}
{{- end }}
  myDefault: {{ default "default val" $v4 }}
  myRequired: {{ required "val5 cannot be empty" $v5 | squote }}
{{- end }}